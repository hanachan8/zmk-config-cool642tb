#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100
#define MOUSE 3
#define SCROLL 5
#define NUM 1

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        comb2 {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        comb3 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <22 23>;
        };

        comb4 {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        comb5 {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <9 8>;
            timeout-ms = <0>;
            layers = <7>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W     &kp E         &kp R               &kp T                                              &kp Y        &kp U  &lt 7 I    &kp O       &lt 7 P
&kp A             &kp S     &kp D         &kp F               &kp G        &trans                 &kp ESCAPE     &kp H        &kp J  &kp K      &kp L       &mt RCTRL COLON
&mt LEFT_SHIFT Z  &kp X     &kp C         &kp V               &kp B        &kp MINUS              &kp TAB        &kp N        &kp M  &kp COMMA  &kp PERIOD  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LWIN  &kp LEFT_ALT  &lt 7 INT_MUHENKAN  &lt 6 SPACE  &lt 2 INTERNATIONAL_4  &kp BACKSPACE  &lt 6 ENTER                                &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        NUM {
            bindings = <
&kp PLUS                &kp NUMBER_7        &kp N8               &kp N9            &kp MINUS                                 &kp F6         &kp F7    &kp F8        &kp F9     &kp F10
&mt ASTRK LEFT_CONTROL  &kp NUMBER_4        &kp NUMBER_5         &kp NUMBER_6      &kp SLASH  &trans          &kp ESCAPE     &kp LEFT       &kp HOME  &kp UP_ARROW  &kp END    &kp ENTER
&mt LEFT_SHIFT N0       &kp NUMBER_1        &kp NUMBER_2         &kp NUMBER_3      &kp B      &kp TILDE       &kp TAB        &kp LC(SPACE)  &kp LEFT  &kp DOWN      &kp RIGHT  &kp SLASH
&mt LEFT_CONTROL COMMA  &mt LEFT_WIN COMMA  &mt LEFT_ALT PERIOD  &kp INT_MUHENKAN  &kp SPACE  &kp INT_HENKAN  &kp BACKSPACE  &kp ENTER                                         &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp LEFT_ALT    &kp F7        &kp F8        &kp F9            &kp F12                                   &kp AT_SIGN    &kp U  &kp LEFT_BRACE        &kp RIGHT_BRACE        &mt INT_YEN RIGHT_ALT
&kp LCTRL       &kp F4        &kp F5        &kp F6            &kp F11    &trans          &kp ESCAPE     &kp HASH       &kp J  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &mt RCTRL DOLLAR
&kp LEFT_SHIFT  &kp F1        &kp F2        &kp F3            &kp F10    &kp TILDE       &kp TAB        &kp AMPERSAND  &kp M  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SLASH
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &kp INT_MUHENKAN  &kp SPACE  &kp INT_HENKAN  &kp BACKSPACE  &kp TAB                                                            &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW {
            bindings = <
&kp Q       &kp W      &kp E     &kp R      &kp T                        &kp Y        &kp U     &kp I     &kp O      &kp P
&kp A       &kp S      &kp UP    &kp F      &kp G        &kp N1  &kp N2  &kp H        &kp J     &kp UP    &kp L      &kp ENTER
&kp Z       &kp LEFT   &kp DOWN  &kp RIGHT  &kp B        &kp N3  &kp N4  &kp N        &kp LEFT  &kp DOWN  &kp RIGHT  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT   &lt 6 SPACE  &kp N5  &kp N6  &lt 7 SPACE                                 &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&kp Q       &kp W     &kp E         &kp R                    &kp T                              &kp Y      &kp U     &to 7     &kp O     &kp P
&kp A       &kp S     &kp D         &kp F                    &kp G     &kp N1    &kp ESCAPE     &kp H      &mkp MB1  &mkp MB3  &mkp MB2  &kp ENTER
&kp Z       &kp X     &kp C         &kp V                    &kp B     &kp N3    &kp RCTRL      &kp N      &kp M     &mkp MB1  &mkp MB2  &kp SLASH
&kp ESCAPE  &kp LWIN  &kp LEFT_ALT  &kp LANG_ZENKAKUHANKAKU  &mkp MB1  &mkp MB2  &kp BACKSPACE  &kp ENTER                                &kp LEFT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 6 SPACE  &kp N5  &kp N6  &lt 7 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        bt {
            bindings = <
&kp N1           &kp N2       &kp N3        &kp N4        &kp N5                                             &kp N6          &kp N7        &kp N8            &kp N9             &kp N0
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH      &kp DOLLAR    &kp PERCENT   &to 0             &bt BT_CLR         &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3       &bt BT_SEL 4
&kp PLUS         &kp MINUS    &kp ASTERISK  &kp SLASH     &kp EQUAL     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp TILDE       &kp QUESTION  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp QUESTION
&bt BT_PRV       &bt BT_NXT   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none             &kp MINUS          &bt BT_CLR_ALL                                                     &bt BT_CLR_ALL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };
};
